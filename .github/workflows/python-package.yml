# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test & Lint & Publish

on:
  push:
    paths-ignore:
      - README.md
    branches: ["*"]
    tags: ["*"]
  pull_request:
    types: [opened, edited, synchronize]
    paths-ignore:
      - README.md

jobs:
  lintAndTest:
    runs-on: ubuntu-latest
    container: python:3.11
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip pipenv
        python -m pipenv install --dev --system
        git config --global --add safe.directory /__w/faviorm/faviorm
    - name: Lint
      run: black --check . && flake8 . && mypy --pretty  .
    - name: Test
      run: coverage run -m pytest --color=yes .
      env:
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: postgres
    - name: Upload coverage reports to Codecov
      if: github.event_name != 'pull_request'
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    - name: Upload coverage reports to CodeClimate
      if: github.event_name != 'pull_request'
      uses: paambaati/codeclimate-action@v5.0.0
      env:
        CC_TEST_REPORTER_ID: ${{secrets.CODE_CLIMATE_TOKEN}}
  publish:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
    needs: ['lintAndTest']
    if: ${{ github.ref_type == 'tag' && github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install build tools
        run: pip install build
      - name: Build package
        run: python -m build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
